name: Build ARM RPI

on:
  workflow_dispatch:
    branches:
      - main

jobs:

  build:
    
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build wheel
        uses: pguyot/arm-runner-action@v2
        with:
          base_image: https://downloads.raspberrypi.org/raspios_full_armhf/images/raspios_full_armhf-2022-09-26/2022-09-22-raspios-bullseye-armhf-full.img.xz
          cpu: cortex-a7:cortex-a53
          copy_repository_path: /nelli
          copy_artifact_path: wheelhouse
#          bind_mount_repository: true
          commands: |
            sudo apt-get update && sudo apt-get install -y python3-pip
            pip install cibuildwheel
            cd /nelli
            cibuildwheel --platform linux

      - name: Copy wheel
        run: |
          mkdir -p ${{ github.sha }}
          mv wheelhouse/nelli*manylinux*.whl ${{ github.sha }}/

      - name: Upload an artifact
        uses: actions/upload-artifact@v3
        if: github.event_name == 'workflow_dispatch'
        with:
          if-no-files-found: error
          name: build_artifact
          path: ${{ github.sha }}

  upload-tarballs:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    needs: [ build ]

    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: build_artifact
          path: ${{ github.sha }}

      - name: Set up a release page
        id: setup_release
        run: |
          NELLI_VERSION=$(python setup.py --version)
          tag_name="$NELLI_VERSION"
          release_title="nelli $NELLI_VERSION"
          echo "nelli $NELLI_VERSION created at $(date)" > body.md
          echo "tag_name=${tag_name}" >> $GITHUB_OUTPUT
          echo "release_title=${release_title}" >> $GITHUB_OUTPUT

      - name: Upload tarballs
        uses: ncipollo/release-action@v1
        with:
          artifacts: "${{ github.sha }}/*.whl"
          bodyFile: body.md
          token: "${{ secrets.GITHUB_TOKEN }}"
          tag: "${{ steps.setup_release.outputs.tag_name }}"
          name: "${{ steps.setup_release.outputs.release_title }}"
          allowUpdates: true
          replacesArtifacts: true